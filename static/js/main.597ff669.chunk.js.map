{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["KeyPad","className","id","App","React","useState","input","error","inputVal","setInputVal","sanitize","replace","evil","fnString","Function","console","log","useEffect","handleClick","e","target","tagName","text","textContent","search","other","slice","match","left","ops","_1","right","operators","trim","split","length","pop","handleSomeSpecialCases","toString","err","handleEnterKeyPress","keyCode","document","body","addEventListener","removeEventListener","htmlFor","onChange","state","value","name","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.597ff669.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.scss\";\n// /^(\\d*(\\.\\d+)?(e[+\\-]\\d*(\\.\\d+)?)?\\s?[%x\\/\\*+\\-]\\s?)*\\d*(\\.\\d+)?(e[+\\-]\\d+(\\.\\d+)?)?$/g\n\nconst KeyPad = () => {\n  return (\n    <div className=\"btn-container\">\n      <div className=\"buttons\">\n        <div className=\"left-panel\">\n          <button id=\"clear\">AC</button>\n          <button>Back</button>\n          <button>%</button>\n          <button id=\"seven\">7</button>\n          <button id=\"eight\">8</button>\n          <button id=\"nine\">9</button>\n          <button id=\"four\">4</button>\n          <button id=\"five\">5</button>\n          <button id=\"six\">6</button>\n          <button id=\"one\">1</button>\n          <button id=\"two\">2</button>\n          <button id=\"three\">3</button>\n          <button id=\"zero\">0</button>\n          <button id=\"decimal\">.</button>\n        </div>\n        <div className=\"right-panel\">\n          <button id=\"divide\">/</button>\n          <button id=\"multiply\">*</button>\n          <button id=\"subtract\">-</button>\n          <button id=\"add\">+</button>\n          <button className=\"green\" id=\"equals\">\n            =\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\nconst App = () => {\n  const [inputVal, setInputVal] = React.useState({ input: \"\", error: \"\" });\n  console.log(inputVal);\n  function handleInputChange(e) {\n    setInputVal((state) => ({ ...state, input: e.target.value }));\n  }\n  function sanitize(input) {\n    return input.replace(/[^-()\\d/*+.e%]/g, \"\");\n  }\n  function evil(fnString) {\n    // eslint-disable-next-line\n    return new Function(\"return \" + fnString)();\n  }\n  const handleSomeSpecialCases = (inputVal) => {\n    // only for FCC testing purpose\n    // handle decimal\n    inputVal = inputVal.replace(/\\s?(\\.\\s?){2,}\\s?/gi, \".\"); // 5..5 -> 5.5\n    inputVal = inputVal.replace(/(\\d*)\\.(\\d+)\\.(\\d*)/gi, \"$1.$2$3\"); // 5.5.5 -> 5.55\n\n    // handle 2 or more consecutive operators\n    // 5 * - + 5 = 10\n    // 5 ++ 5 = 10\n    inputVal = inputVal.replace(\n      /(\\d+)((\\s?[+\\-*x/]\\s?){2,})(\\.?\\d*)/g,\n      (match, left, ops, _1, right) => {\n        let operators = ops.trim().split(/\\s?/);\n        if (operators.length > 2) {\n          return left + operators.pop() + right;\n        } else if (operators.length === 2) {\n          if (\n            operators[0].search(/[/*%]/g) !== -1 &&\n            operators[1].search(/-+/g) !== -1\n          ) {\n            return match;\n          } else {\n            return left + operators.pop() + right;\n          }\n        }\n      }\n    );\n    return inputVal;\n  };\n  React.useEffect(() => {\n    function handleClick(e) {\n      let target = e.target;\n      if (target.tagName !== \"BUTTON\") {\n        return;\n      }\n      let text = target.textContent;\n      if (!text) {\n        return;\n      }\n      if (text.search(/^[0-9]|[%\\-*+/.]$/gi) !== -1) {\n        // do below for all button presses expect `=`\n\n        setInputVal(({ input: inputVal, ...other }) => {\n          if (inputVal.search(/^0/) !== -1) {\n            return { ...other, input: inputVal.slice(1) + text };\n          }\n          inputVal = handleSomeSpecialCases(inputVal);\n          return { ...other, input: inputVal + text };\n        });\n      } else if (text === \"=\") {\n        setInputVal(({ input: inputVal }) => {\n          try {\n            inputVal = sanitize(inputVal);\n            let result = evil(inputVal);\n            return { error: \"\", input: result.toString() };\n          } catch (err) {\n            console.log(err);\n            return { error: \"Malformed expression\", input: inputVal };\n          }\n        });\n      } else if (text === \"AC\") {\n        setInputVal({ input: \"0\", error: \"\" });\n      } else if (text === \"Back\") {\n        if (inputVal !== \"\") {\n          setInputVal(({ input: inputVal, ...other }) => ({\n            input: inputVal.slice(0, inputVal.length - 1),\n            ...other,\n          }));\n        }\n      }\n    }\n\n    function handleEnterKeyPress(e) {\n      if (e.keyCode !== 13) {\n        return;\n      }\n      setInputVal(({ input: inputVal }) => {\n        try {\n          inputVal = sanitize(inputVal);\n          let result = evil(inputVal);\n          return { error: \"\", input: result.toString() };\n        } catch (err) {\n          console.log(err);\n          return { input: inputVal, error: \"Malformed expression\" }; // we are inside react state updater function\n        }\n      });\n    }\n\n    document.body.addEventListener(\"click\", handleClick);\n    document.body.addEventListener(\"keypress\", handleEnterKeyPress);\n    return () => {\n      document.body.removeEventListener(\"click\", handleClick);\n      document.body.removeEventListener(\"keypress\", handleEnterKeyPress);\n    };\n    // eslint-disable-next-line\n  }, []); // effect will be applied one time after render\n  return (\n    <div className=\"calc\">\n      <h2>Calculator</h2>\n      <div className={`screen ${inputVal.error ? \"error-active\" : \"\"}`}>\n        <label htmlFor=\"display\" className=\"sr-only\">\n          enter input for calculation\n        </label>\n        <input\n          id=\"display\"\n          onChange={handleInputChange}\n          value={inputVal.input}\n          name=\"calcInput\"\n        />\n      </div>\n      <div className={`error ${inputVal.error ? \"error-active\" : \"\"}`}>\n        {inputVal.error}\n      </div>\n      <KeyPad />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}